generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  username String
  password String
  room     Room?
  orders   Order[]
}

model Order {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @unique @db.ObjectId
  items   Item[]   @relation(fields: [itemIds], references: [id])
  itemIds String[] @db.ObjectId
  rover   Rover?   @relation(fields: [roverId], references: [id])
  roverId String?  @db.ObjectId
}

model Hotel {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  hotelName String @unique
  password  String
  rooms     Room[]
  items     Item[]
}

model Item {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  itemName  String
  itemPrice Int
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  hotelId   String   @db.ObjectId
  orders    Order[]  @relation(fields: [orderIds], references: [id])
  orderIds  String[] @db.ObjectId
}

model Room {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  roomNumber Int
  path       String[]
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?  @unique @db.ObjectId
  hotel      Hotel    @relation(fields: [hotelId], references: [id])
  hotelId    String   @db.ObjectId
}

model Rover {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  active Boolean
  orders Order[]
}
